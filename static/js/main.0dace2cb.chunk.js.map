{"version":3,"sources":["models/utils.js","square.js","models/game.js","models/player.js","board.js","game_view.js","App.js","index.js"],"names":["module","exports","isSubset","subsetCandidate","superSet","every","element","includes","Cell","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","className","onClick","value","React","Component","WINNING_COMBINATIONS","Game","player1","player2","players","currentPlayerIndex","movesPlayed","position","some","player","hasAlreadyPlayedAt","error","message","concat","getCurrentPlayer","play","changeTurn","winner","find","hasWon","undefined","status","getName","board","Array","fill","forEach","moves","move","getSymbol","require","Player","name","symbol","push","winningCombinations","_this","combination","Board","state","game","cellId","_this2","setState","newState","objectSpread","playMove","gameStatus","getStatus","handleClick","changeStatus","generateBoard","console","log","square","bind","GameView","style","fontSize","src_board","App","game_view","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0dace2cb.chunk.js","sourcesContent":["const isSubset = function(subsetCandidate, superSet) {\n  return subsetCandidate.every(element => superSet.includes(element));\n};\n\nmodule.exports = { isSubset };\n","import React from 'react';\n\nclass Cell extends React.Component {\n  constructor(props) {\n    super(props);\n    // console.log(this.props);\n  }\n\n  render() {\n    return (\n      <div className=\"cell\" onClick={this.props.onClick}>\n        {this.props.value}\n      </div>\n    );\n  }\n}\n\nexport default Cell;\n","const WINNING_COMBINATIONS = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9],\n  [1, 5, 9],\n  [3, 5, 7]\n];\n\nclass Game {\n  constructor(player1, player2) {\n    this.players = [player1, player2];\n    this.currentPlayerIndex = 0;\n    this.movesPlayed = 0;\n  }\n\n  playMove(position) {\n    const isPositionOccupied = this.players.some(player =>\n      player.hasAlreadyPlayedAt(position)\n    );\n\n    if (isPositionOccupied) {\n      return { error: true, message: `Can't play on position ${position}` };\n    }\n\n    this.getCurrentPlayer().play(position);\n    this.movesPlayed++;\n    this.changeTurn();\n    return { error: false, message: `` };\n  }\n\n  getStatus() {\n    const winner = this.players.find(player =>\n      player.hasWon(WINNING_COMBINATIONS)\n    );\n\n    if (winner != undefined) {\n      return {\n        status: 'SOMEONE_WON',\n        winner: winner.getName(),\n        message: `${winner.getName()} has won the game.`\n      };\n    }\n\n    if (this.movesPlayed == 9) {\n      return { status: 'DRAW', message: 'Game draw.' };\n    }\n\n    return {\n      status: 'RUNNING',\n      message: `${this.getCurrentPlayer().getName()}'s turn.`\n    };\n  }\n\n  getCurrentPlayer() {\n    return this.players[this.currentPlayerIndex];\n  }\n\n  changeTurn() {\n    this.currentPlayerIndex = (this.currentPlayerIndex + 1) % 2;\n  }\n\n  generateBoard() {\n    const board = new Array(9).fill(' ');\n    this.players.forEach(player => {\n      player.moves.forEach(move => {\n        board[move - 1] = player.getSymbol();\n      });\n    });\n    return board;\n  }\n}\n\n// module.exports = Game;\nexport default Game;\n","const { isSubset } = require('./utils');\n\nclass Player {\n  constructor(name, symbol) {\n    this.name = name;\n    this.symbol = symbol;\n    this.moves = [];\n  }\n\n  hasAlreadyPlayedAt(position) {\n    return this.moves.includes(position);\n  }\n\n  play(position) {\n    this.moves.push(position);\n  }\n\n  hasWon(winningCombinations) {\n    return winningCombinations.some(combination =>\n      isSubset(combination, this.moves)\n    );\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  getSymbol() {\n    return this.symbol;\n  }\n}\n\n// module.exports = Player;\nexport default Player;\n","import React from 'react';\nimport Cell from './square';\n// const Game = require('./models/game');\n// const Player = require('./models/player');\n\nimport Game from './models/game';\nimport Player from './models/player';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      game: new Game(new Player('Player1', 'X'), new Player('Player2', 'O'))\n    };\n  }\n\n  handleClick(cellId) {\n    this.setState(state => {\n      const newState = { ...state };\n      newState.game.playMove(cellId);\n\n      const gameStatus = newState.game.getStatus();\n      if (gameStatus.status != 'RUNNING') {\n        this.handleClick = () => {};\n      }\n\n      this.props.changeStatus(gameStatus.message);\n      return newState;\n    });\n  }\n\n  render() {\n    const board = this.state.game.generateBoard();\n    console.log(board);\n\n    return (\n      <div>\n        <div className=\"board-row\">\n          <Cell value={board[0]} onClick={this.handleClick.bind(this, 1)} />\n          <Cell value={board[1]} onClick={this.handleClick.bind(this, 2)} />\n          <Cell value={board[2]} onClick={this.handleClick.bind(this, 3)} />\n        </div>\n        <div className=\"board-row\">\n          <Cell value={board[3]} onClick={this.handleClick.bind(this, 4)} />\n          <Cell value={board[4]} onClick={this.handleClick.bind(this, 5)} />\n          <Cell value={board[5]} onClick={this.handleClick.bind(this, 6)} />\n        </div>\n        <div className=\"board-row\">\n          <Cell value={board[6]} onClick={this.handleClick.bind(this, 7)} />\n          <Cell value={board[7]} onClick={this.handleClick.bind(this, 8)} />\n          <Cell value={board[8]} onClick={this.handleClick.bind(this, 9)} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Board;\n","import React from 'react';\nimport Board from './board';\n\nclass GameView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { status: `Player1's turn` };\n  }\n\n  changeStatus(status) {\n    this.setState(state => ({ status }));\n  }\n\n  render() {\n    return (\n      <div>\n        <div style={{ fontSize: '20px' }}>Player1 : X</div>\n        <div style={{ fontSize: '20px' }}>Player1 : O</div>\n        <h3>{this.state.status}</h3>\n        <Board changeStatus={this.changeStatus.bind(this)} />\n      </div>\n    );\n  }\n}\n\nexport default GameView;\n","import React, { Component } from 'react';\nimport GameView from './game_view';\n\nclass App extends Component {\n  render() {\n    return <GameView />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './board.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}